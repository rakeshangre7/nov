// Generates Constants for TemplateIDs

using System.Linq;
using System.Collections.Generic;

Log.Debug($"Emitting TypeScript interfaces for {ConfigurationName}...");

Code.AppendLine($@"
/**
 * <auto-generated>
 *     This code was generated by a tool.
 *
 *     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * </auto-generated>
 */ 

export const {GetRoot()} = {{ 
    TemplateIds: {{
        { RenderTemplates()}    
    }}
}}

");
public string GetRoot()
{
    return Templates.First().RootNamespace.Replace("Feature.", "").Replace("Foundation.", "").Replace("Project.", "").Split(".").First();
}
public string RenderTemplates()
{
    var localCode = new System.Text.StringBuilder();

    return string.Join(",", Templates.Select(template => $@"
        {template.CodeName} : ""{template.Id.ToString("N").ToUpperInvariant()}"""));
    //foreach (var template in Templates)
    //{
    //    localCode.AppendLine($@"
    //    {template.CodeName} : ""{template.Id.ToString("N").ToUpperInvariant()}""");
    //}

    //return localCode.ToString();
}